name: JFrog-GitHub Maven

on:
  workflow_dispatch:

permissions:
  id-token: write

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest   

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to Artifactory Docker registry
        run: |
          echo "${{ secrets.JF_ACCESS_TOKEN }}" | docker login elinaf.jfrog.io \
            -u "${{ secrets.JF_ACCESS_USER }}" --password-stdin

      - name: Pull custom Maven image
        run: |
          docker pull elinaf.jfrog.io/jordanta-docker-local/jfrog-mvn-yoah-rt:latest

      - name: Start custom container (detached)
        run: |
          docker run -d --name jfrog-mvn-container \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            elinaf.jfrog.io/jordanta-docker-local/jfrog-mvn-yoah-rt:latest sleep infinity

      - name: Install JFrog CLI on host
        uses: jfrog/setup-jfrog-cli@v4.5.13
        env:
          JF_URL: https://elinaf.jfrog.io
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

      - name: Configure Maven for Artifactory inside container
        run: |
          # Remove any leftover container from previous runs
          docker rm -f jfrog-mvn-container || true

          docker run -d --name jfrog-mvn-container \
          -v ${{ github.workspace }}:/workspace \
          -w /workspace \
          elinaf.jfrog.io/jordanta-docker-local/jfrog-mvn-yoah-rt:latest \
          sleep infinity
          
          "

      - name: Build Maven project inside container
        run: |
          docker exec jfrog-mvn-container bash -c "
            cd /workspace &&
            /usr/src/app/jf mvn clean install --batch-mode --errors --show-version --project jt-project --threads 8 --build-name testjfmvn --build-number 1
          "
      - name: Stop and remove container
        if: always()
        run: |
          docker stop jfrog-mvn-container || true
          docker rm jfrog-mvn-container || true